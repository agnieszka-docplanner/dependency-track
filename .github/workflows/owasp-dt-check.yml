name: Dependency-Track-Dev

on:
  pull_request:
    paths:
      - 'composer.lock'

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      # Rename composer files to avoid downloading everything
      - name: Rename composer files
        id: rename-composer
        run: mv composer.json composer.json.copy && mv composer.lock composer.lock.copy
      # Create empty composer file with valid json
      - name: Create composer
        id: create-composer
        run: echo "{}" > composer.json
      # Add cyclonedx plugin and install it
      - name: Install Cyclonedx
        id: installsCyclonedx
        run: composer config --no-plugins allow-plugins.cyclonedx/cyclonedx-php-composer true && composer require --ignore-platform-reqs --dev cyclonedx/cyclonedx-php-composer
      # Rename composer files back to perform analysis
      - name: Rename composer back
        id: rename-composer-back
        run: mv composer.json.copy composer.json && mv composer.lock.copy composer.lock
      - name: Generate SBOM
        id: generatesSBOM
        run: composer make-bom --output-format=json
      # Send SBOM to dev project
      - name: Prints SBOM
        run: |
          curl -X "POST" "http://159.89.100.172:8081/api/v1/bom" \
            -H 'X-API-Key: ${{ secrets.SECRET_OWASP_DT_KEY }}' \
            -F "projectName=$GITHUB_REPOSITORY-php-dev" \
            -F "autoCreate=true" \
            -F "bom=@bom.json"
      - name: Fetch results from production
        run: |
          curl -X "GET" "http://159.89.100.172:8081/api/v1/metrics/project/3750aaa5-b4b5-4d7d-9818-231ce07927d5/current" \
            -H 'X-API-Key: ${{ secrets.SECRET_OWASP_DT_KEY }}' -o metrics-prod.json
      - name: Fetch results from dev
        run: |
          curl -X "GET" "http://159.89.100.172:8081/api/v1/metrics/project/49ec41a4-8e47-4026-8ad8-b74775d3953a/current" \
            -H 'X-API-Key: ${{ secrets.SECRET_OWASP_DT_KEY }}' -o metrics-dev.json
      - name: Check for vulnerabilities on production
        id: check-production
        run: |
          echo "RESULTS=$(cat metrics-prod.json | jq '.vulnerabilities')" >> $GITHUB_OUTPUT
      - name: Check for new vulns
        id: check-dev
        run: |
          echo "RESULTS=$(cat metrics-dev.json | jq '.vulnerabilities')" >> $GITHUB_OUTPUT
      - name: Put a comment
        uses: thollander/actions-comment-pull-request@v1
        if: steps.check-dev.outputs.RESULTS > steps.check-prod.outputs.RESULTS
        with:
          message: |-
            #### You introduced new vulnerabilities
            It looks like you updated dependencies files and it resulted with adding vulnerable library. 
            Please review the dependencies you added. You can see the vulnerabilities details [here](http://159.89.100.172:8080/projects/a8d7eabb-4ea6-4b0b-900a-3e62db2cb622).
            You can login with AWS SSO. 
